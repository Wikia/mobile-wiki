{{#if responsive.isMobile}}
	{{discussion-standalone-editor
		create=(action 'createReply')
		errorMessage=editorState.errorMessage
		generateOpenGraph=(route-action 'generateOpenGraph')
		isActive=editorState.isOpen
		isLoading=editorState.isLoading
		isReply=true
		isVisible=editorState.isOpen
		setEditorActive=(action 'setEditorActive')
	}}
{{/if}}

{{#modal-dialog
	class='is-bare is-desktop-centered discussion-editor-dialog'
	closeOnOverlayClick=false
	isVisible=editEditorState.isOpen
}}
	{{discussion-standalone-editor
		editEntity=editEditorState.discussionEntity
		editPost=(action 'editPost')
		editReply=(action 'editReply')
		errorMessage=editEditorState.errorMessage
		generateOpenGraph=(route-action 'generateOpenGraph')
		isActive=editEditorState.isOpen
		isEdit=true
		isLoading=editEditorState.isLoading
		setEditorActive=(action 'setEditorActive')
	}}
{{/modal-dialog}}

{{#discussion-post-details-layout
	deleteAllPosts=(action 'deleteAllPosts')
	model=model.current.data
	smartBannerVisible=smartBannerVisible
}}
	{{discussion-post
		approve=(action 'approve')
		createReply=(action 'createReply')
		deleteAllPosts=(action 'deleteAllPosts')
		deletePost=(action 'deletePost')
		deleteReply=(action 'deleteReply')
		editorState=editorState
		editPost=(action 'editPost')
		editReply=(action 'editReply')
		generateOpenGraph=(route-action 'generateOpenGraph')
		loadNewerReplies=(action 'loadNewerReplies')
		loadOlderReplies=(action 'loadOlderReplies')
		lockPost=(action 'lockPost')
		model=model.current.data
		openEditEditor=(action 'openEditEditor')
		report=(action 'report')
		setEditorActive=(action 'setEditorActive')
		showCategories=showCategories
		undeletePost=(action 'undeletePost')
		undeleteReply=(action 'undeleteReply')
		unlockPost=(action 'unlockPost')
		upvote=(action 'upvote')
	}}
{{/discussion-post-details-layout}}
