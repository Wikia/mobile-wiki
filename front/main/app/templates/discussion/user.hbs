{{#modal-dialog
	class='is-bare is-desktop-centered discussion-editor-dialog'
	closeOnOverlayClick=false
	isVisible=editEditorState.isOpen
}}
	{{discussion-standalone-editor
		categories=model.index.categories.categories
		categoryPickerButtonId='categoryPickerButtonEdit'
		editEntity=editEditorState.discussionEntity
		editPost=(action 'editPost')
		editReply=(action 'editReply')
		errorMessage=editEditorState.errorMessage
		generateOpenGraph=(route-action 'generateOpenGraph')
		gotoGuidelines=(action 'gotoGuidelines')
		hasTitle=true
		isActive=editEditorState.isOpen
		isEdit=true
		isLoading=editEditorState.isLoading
		setEditorActive=(action 'setEditorActive')
	}}
{{/modal-dialog}}

{{#discussion-user-entities-list-layout
	attributes=model.index.attributes.data
	deleteAllPosts=(action 'deleteAllPosts')
	model=model.current.data
	openGuidelines=(action 'openGuidelines')
	smartBannerVisible=smartBannerVisible
	uploadDiscussionsHeader=(action 'uploadDiscussionsHeader')
}}
	{{discussion-user-list-wrapper
		approve=(action 'approve')
		categories=model.index.categories.categories
		deletePost=(action 'deletePost')
		deleteReply=(action 'deleteReply')
		firstPageLoaded=model.current.firstPageLoaded
		follow=(action 'follow')
		goToPage=(action 'goToPage')
		loadPage=(action 'loadPage')
		lockPost=(action 'lockPost')
		minorError=model.current.data.minorError
		page=page
		posts=model.current.data.entities
		postsDisplayed=model.current.data.entities.length
		report=(action 'report')
		totalPosts=model.current.data.postCount
		undeletePost=(action 'undeletePost')
		undeleteReply=(action 'undeleteReply')
		openEditEditor=(action 'openEditEditor')
		setEditorActive=(action 'setEditorActive')
		unlockPost=(action 'unlockPost')
		upvote=(action 'upvote')
	}}
{{/discussion-user-entities-list-layout}}
