FROM node:8.8.1-alpine

WORKDIR /app

# move files to cache installing of dependencies
COPY package.json .
COPY bower.json .

# bower workaround
RUN echo '{ "allow_root": true }' > /root/.bowerrc && \

# create group and user
    addgroup -S mobile-wiki && \
    adduser -h /app -s /sbin/nologin -D -G mobile-wiki -u 1337 docker_user && \
    chmod 755 /app && \

# install missing stuff
    apk add --no-cache --virtual .gyp python make g++ git && \

# install npm globals
    npm install -g bower && \
    npm install -g ember-cli && \

# install all dependencies
    npm run setup && \

# cleanup
    apk del .gyp python make g++ git && \
    bower cache clean && \
    npm uninstall -g bower && \
    npm cache clean

USER docker_user

# copy app
# Note:
# - first argument is the path inside the context of build (folder where Dockerfile is placed)
# - second argument is the docker daemon (newly created container)
# - "." means "current working directory", and since we're not selecting any specific files
# it's basically "copy everything from mobile-wiki project to WORKDIR in docker"
COPY . .

# build app
RUN npm run linter && \
# tests are broken for now
# npm run tests && \
    npm run build-prod

# 8001 is for prod
EXPOSE 8001

# run fastboot-server when 'docker run' will be called
ENTRYPOINT ["npm", "run", "fastboot-server"]
