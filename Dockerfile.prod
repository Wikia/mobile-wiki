FROM node:12.13.1-alpine

WORKDIR /app

# passes IMAGE_VERSION build-arg to environment variable to use it in application
ARG IMAGE_VERSION
ARG GITHUB_TOKEN
ENV IMAGE_VERSION ${IMAGE_VERSION}
ENV GITHUB_TOKEN ${GITHUB_TOKEN}

# copy app
# Note:
# - first argument is the path inside the context of build (folder where Dockerfile is placed)
# - second argument is the docker daemon (newly created container)
# - "." means "current working directory", and since we're not selecting any specific files
# it's basically "copy everything from mobile-wiki project to WORKDIR in docker"
COPY . .

# install missing stuff
RUN apk add --no-cache --virtual .gyp python make g++ git && \

    # override github's auth type
    git config --global url."https://${GITHUB_TOKEN}@github.com/".insteadOf ssh://git@github.com/ && \

    # install all dependencies
    npm set unsafe-perm=true && \
    npm set progress=false && \
    npm run setup && \

    # cleanup
    apk del .gyp python make g++ git && \
    npm cache clean --force && \

    # build app
    npm run build-prod && \

    # change permissions to necessary files
    chown -R 65534:65534 /app

USER 65534

# 8001 is for prod, 8007 is for metrics
EXPOSE 8001 8007

# run fastboot-server when 'docker run' will be called
ENTRYPOINT ["npm", "run", "fastboot-server"]
